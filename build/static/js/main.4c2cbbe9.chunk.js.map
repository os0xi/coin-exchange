{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coins/Coins.jsx","components/CoinsList/CoinsList.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","_templateObject","Object","taggedTemplateLiteral","AccountBalance","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleBalance","bind","assertThisInitialized","buttonText","showBalance","balance","amount","react_default","a","createElement","onClick","Component","TD","td","Coins_templateObject","Coins","handleClick","event","preventDefault","console","log","handleCoinRefresh","ticker","name","price","action","method","CoinsList","className","coins","map","_ref","balanceToggled","Coins_Coins","key","Header","CoinExchangeHeader","SpinningLogoImg","src","logoURL","alt","AppTitle","header","Header_templateObject","img","_templateObject2","h1","_templateObject3","App","state","coinData","setState","found","find","element","newCoinData","values","newValues","objectSpread","randomPercentage","Math","random","axios","get","coinsJson","paprikaCoins","data","slice","coin","id","symbol","Header_Header","AccountBalance_AccountBalance","CoinsList_CoinsList","React","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"uUAIMA,EAAUC,IAAOC,QAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,sGAOQE,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAJ,OAAAK,EAAA,EAAAL,CAAAM,KAAAJ,IACjBE,EAAAJ,OAAAO,EAAA,EAAAP,CAAAM,KAAAN,OAAAQ,EAAA,EAAAR,CAAAE,GAAAO,KAAAH,KAAMH,KACDO,cAAgBN,EAAKM,cAAcC,KAAnBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAI,KAFJA,+EAKjBE,KAAKH,MAAMO,iDAIX,IAAMG,EAAaP,KAAKH,MAAMW,YAAc,eAAiB,eACvDC,EAAUT,KAAKH,MAAMW,YAAcR,KAAKH,MAAMa,OAAS,QAC7D,OACEC,EAAAC,EAAAC,cAACvB,EAAD,kBACamB,EACXE,EAAAC,EAAAC,cAAA,UAAQC,QAASd,KAAKI,eAAgBG,WAfFQ,aCRtCC,EAAKzB,IAAO0B,GAAVC,MAAAxB,OAAAC,EAAA,EAAAD,CAAA,sDAKayB,6MACnBC,YAAc,SAACC,GACbA,EAAMC,iBACNC,QAAQC,IAAI,mBACZ1B,EAAKD,MAAM4B,kBAAkB3B,EAAKD,MAAM6B,iFAGxC,OACEf,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACG,EAAD,KAAKhB,KAAKH,MAAM8B,MAChBhB,EAAAC,EAAAC,cAACG,EAAD,KAAKhB,KAAKH,MAAM6B,QAChBf,EAAAC,EAAAC,cAACG,EAAD,SAAMhB,KAAKH,MAAM+B,OACjBjB,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,QAAMgB,OAAO,IAAIC,OAAO,OACtBnB,EAAAC,EAAAC,cAAA,UAAQC,QAASd,KAAKoB,aAAtB,aAGJT,EAAAC,EAAAC,cAACG,EAAD,SAAMhB,KAAKH,MAAMY,iBAjBUM,aCLdgB,mLACV,IAAAjC,EAAAE,KACP,OACEW,EAAAC,EAAAC,cAAA,SAAOmB,UAAU,eACfrB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aACGb,KAAKH,MAAMoC,MAAMC,IAAI,SAAAC,GAAsC,IAAnCR,EAAmCQ,EAAnCR,KAAMD,EAA6BS,EAA7BT,OAAQE,EAAqBO,EAArBP,MAAOnB,EAAc0B,EAAd1B,QACtC2B,EAAiBtC,EAAKD,MAAMW,YAAcC,EAAU,QAC1D,OACEE,EAAAC,EAAAC,cAACwB,EAAD,CACEC,IAAKZ,EACLC,KAAMA,EACND,OAAQA,EACRE,MAAOA,EACPnB,QAAS2B,EACTX,kBAAmB3B,EAAKD,MAAM4B,+BArBPV,aCAlBwB,mLAEjB,OACE5B,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAD,CAAiBC,IAAKC,EAASC,IAAI,KACnCjC,EAAAC,EAAAC,cAACgC,EAAD,8BAL4B9B,aAU9ByB,EAAqBjD,IAAOuD,OAAVC,MAAArD,OAAAC,EAAA,EAAAD,CAAA,wLASlB+C,EAAkBlD,IAAOyD,IAAVC,MAAAvD,OAAAC,EAAA,EAAAD,CAAA,2IAOfmD,EAAWtD,IAAO2D,GAAVC,MAAAzD,OAAAC,EAAA,EAAAD,CAAA,8BAGRiD,EACJ,67MC+DaS,6MAxFbC,MAAQ,CACN5C,QAAS,IACTD,aAAa,EACb8C,SAAU,MA8CZlD,cAAgB,WACdN,EAAKyD,SAAS,CAAE/C,aAAcV,EAAKuD,MAAM7C,iBAG3CiB,kBAAoB,SAACC,GACnB,IAAM8B,EAAQ1D,EAAKuD,MAAMC,SAASG,KAChC,SAACC,GAAD,OAAaA,EAAQhC,SAAWA,IAE9BiC,EAAc7D,EAAKuD,MAAMC,SAASpB,IAAI,SAAU0B,GAClD,IAAIC,EAASnE,OAAAoE,EAAA,EAAApE,CAAA,GAAQkE,GACrB,GAAIJ,EAAM9B,SAAWkC,EAAOlC,OAAQ,CAClC,IAAMqC,EAAmB,KAAwB,IAAhBC,KAAKC,SAEtCJ,EAAUjC,OAASmC,EACnBxC,QAAQC,IAAIqC,EAAUjC,OAExB,OAAOiC,IAET/D,EAAKyD,SAAS,CAAED,SAAUK,+MA9B1BpC,QAAQC,IAAI,6BACU0C,IAAMC,IAAI,+CAA5BC,SACAC,EAAeD,EAAUE,KAAKC,MAAM,EAAG,IAAIrC,IAAI,SAACsC,GAAD,MAAW,CAC5DlC,IAAKkC,EAAKC,GACV9C,KAAM6C,EAAK7C,KACXD,OAAQ8C,EAAKE,OACb9C,MAAO,EACPnB,QAAS,KAEXT,KAAKuD,SAAS,CAAED,SAAUe,uIAwB1B,OACE1D,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,OACbrB,EAAAC,EAAAC,cAAC8D,EAAD,MACAhE,EAAAC,EAAAC,cAAC+D,EAAD,CACElE,OAAQV,KAAKqD,MAAM5C,QACnBL,cAAeJ,KAAKI,cACpBI,YAAaR,KAAKqD,MAAM7C,cAE1BG,EAAAC,EAAAC,cAACgE,EAAD,CACE5C,MAAOjC,KAAKqD,MAAMC,SAClB7B,kBAAmBzB,KAAKyB,kBACxBjB,YAAaR,KAAKqD,MAAM7C,sBAlFhBsE,IAAM/D,WCKTgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAA7E,KAAA,UAAqB+E,KAAK,SAAAjD,GAAiD,IAA9CkD,EAA8ClD,EAA9CkD,OAAQC,EAAsCnD,EAAtCmD,OAAQC,EAA8BpD,EAA9BoD,OAAQC,EAAsBrD,EAAtBqD,OAAQC,EAActD,EAAdsD,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnF,EAAAC,EAAAC,cAACF,EAAAC,EAAMmF,WAAP,KACEpF,EAAAC,EAAAC,cAACmF,EAAD,QAOJjB","file":"static/js/main.4c2cbbe9.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  color: white;\r\n  font-size: 2rem;\r\n  text-align: left;\r\n  padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nexport default class AccountBalance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleBalance = this.toggleBalance.bind(this);\r\n  }\r\n  toggleBalance() {\r\n    this.props.toggleBalance();\r\n  }\r\n\r\n  render() {\r\n    const buttonText = this.props.showBalance ? \"Hide balance\" : \"Show balance\";\r\n    const balance = this.props.showBalance ? this.props.amount : \"*****\";\r\n    return (\r\n      <Section>\r\n        Balance: ${balance}\r\n        <button onClick={this.toggleBalance}>{buttonText}</button>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n  amount: PropTypes.number.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nconst TD = styled.td`\r\n  border: 1px solid white;\r\n  width: 25vh;\r\n`;\r\n\r\nexport default class Coins extends Component {\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"refresh pressed\");\r\n    this.props.handleCoinRefresh(this.props.ticker);\r\n  };\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <TD>{this.props.name}</TD>\r\n        <TD>{this.props.ticker}</TD>\r\n        <TD>${this.props.price}</TD>\r\n        <TD>\r\n          <form action=\"#\" method=\"GET\">\r\n            <button onClick={this.handleClick}>Refresh</button>\r\n          </form>\r\n        </TD>\r\n        <TD>${this.props.balance}</TD>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nCoins.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Coin from \"../Coins/Coins\";\r\n\r\nexport default class CoinsList extends Component {\r\n  render() {\r\n    return (\r\n      <table className=\"coin-prices\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Ticker</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.coins.map(({ name, ticker, price, balance }) => {\r\n            const balanceToggled = this.props.showBalance ? balance : \"*****\";\r\n            return (\r\n              <Coin\r\n                key={ticker}\r\n                name={name}\r\n                ticker={ticker}\r\n                price={price}\r\n                balance={balanceToggled}\r\n                handleCoinRefresh={this.props.handleCoinRefresh}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <CoinExchangeHeader>\r\n        <SpinningLogoImg src={logoURL} alt=\"\" />\r\n        <AppTitle>Coin Exchange</AppTitle>\r\n      </CoinExchangeHeader>\r\n    );\r\n  }\r\n}\r\nconst CoinExchangeHeader = styled.header`\r\n  background-color: black;\r\n  min-height: 40vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n`;\r\nconst SpinningLogoImg = styled.img`\r\n  height: 8rem;\r\n  width: 8rem;\r\n  pointer-events: none;\r\n  margin: 1rem 3rem;\r\n  animation: App-logo-spin infinite 20s linear;\r\n`;\r\nconst AppTitle = styled.h1`\r\n  font-size: 4rem;\r\n`;\r\nconst logoURL =\r\n  \"https://imgs.search.brave.com/-rLo6GB3uMWXa_2Wwn_2V-zPN1WKzvbBDUs8JfIF6Iw/rs:fit:1200:1200:1/g:ce/aHR0cHM6Ly9jcnlw/dG9sb2dvcy5jYy9s/b2dvcy9zb2xhbmEt/c29sLWxvZ28ucG5n\";\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport AccountBalance from \"./components/AccountBalance/AccountBalance\";\r\nimport CoinsList from \"./components/CoinsList/CoinsList\";\r\nimport Header from \"./components/Header/Header\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    balance: 10000,\r\n    showBalance: true,\r\n    coinData: [\r\n      // {\r\n      //   name: \"Bitcoin\",\r\n      //   ticker: \"BTC\",\r\n      //   price: 30000,\r\n      //   balance: 1,\r\n      // },\r\n      // {\r\n      //   name: \"Tether\",\r\n      //   ticker: \"USDC\",\r\n      //   price: 1,\r\n      //   balance: 10000,\r\n      // },\r\n      // {\r\n      //   name: \"Ethereum\",\r\n      //   ticker: \"ETH\",\r\n      //   price: 2000,\r\n      //   balance: 1,\r\n      // },\r\n      // {\r\n      //   name: \"Ripple\",\r\n      //   ticker: \"XRP\",\r\n      //   price: 0.4,\r\n      //   balance: 10,\r\n      // },\r\n      // {\r\n      //   name: \"Binance Coin\",\r\n      //   ticker: \"BNB\",\r\n      //   price: 300,\r\n      //   balance: 10,\r\n      // },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    console.log(\"Main App Mounted\");\r\n    let coinsJson = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\r\n    let paprikaCoins = coinsJson.data.slice(0, 10).map((coin) => ({\r\n      key: coin.id,\r\n      name: coin.name,\r\n      ticker: coin.symbol,\r\n      price: 0,\r\n      balance: 0,\r\n    }));\r\n    this.setState({ coinData: paprikaCoins });\r\n  }\r\n\r\n  toggleBalance = () => {\r\n    this.setState({ showBalance: !this.state.showBalance });\r\n  };\r\n\r\n  handleCoinRefresh = (ticker) => {\r\n    const found = this.state.coinData.find(\r\n      (element) => element.ticker === ticker\r\n    );\r\n    let newCoinData = this.state.coinData.map(function (values) {\r\n      let newValues = { ...values };\r\n      if (found.ticker === values.ticker) {\r\n        const randomPercentage = 0.994 + Math.random() * 0.01;\r\n\r\n        newValues.price += randomPercentage;\r\n        console.log(newValues.price);\r\n      }\r\n      return newValues;\r\n    });\r\n    this.setState({ coinData: newCoinData });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <AccountBalance\r\n          amount={this.state.balance}\r\n          toggleBalance={this.toggleBalance}\r\n          showBalance={this.state.showBalance}\r\n        />\r\n        <CoinsList\r\n          coins={this.state.coinData}\r\n          handleCoinRefresh={this.handleCoinRefresh}\r\n          showBalance={this.state.showBalance}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}