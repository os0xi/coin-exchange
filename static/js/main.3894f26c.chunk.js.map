{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Coins/Coins.jsx","components/CoinsList/CoinsList.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","_templateObject","Object","taggedTemplateLiteral","ButtonsDiv","div","_templateObject2","AccountBalance","props","buttonText","showBalance","balance","amount","react_default","a","createElement","esm_button","shadow","onPress","toggleBalance","css","background","marginTop","airdropMoney","bordered","color","marginLeft","fontWeight","TD","td","Coins_templateObject","Buttons","Coins_templateObject2","TR","tr","_templateObject3","Coins","_useState","useState","_useState2","slicedToArray","tradeVisible","settradeVisible","_useState3","_useState4","coinAmount","setcoinAmount","closeTradeHandler","handleCoinTrade","direction","ticker","name","price","onClick","size","border","&:hover","esm_text","modal","aria-labelledby","open","onClose","Header","input","fullWidth","aria-label","labelRight","placeholder","onChange","e","target","value","console","log","Body","weight","container","action","method","event","handleCoinRefresh","CoinsList","className","coins","map","_ref","balanceToggled","key","CoinExchangeHeader","SpinningLogoImg","src","logoURL","alt","AppTitle","Component","header","Header_templateObject","img","Header_templateObject2","h1","Header_templateObject3","App","_React$useState","React","_React$useState2","errorModalVisible","seterrorVisible","setbalance","setshowBalance","_useState5","_useState6","coinData","setcoinData","setCoinsData","asyncToGenerator","_regeneratorRuntime","mark","_callee","coinsJson","pricesJson","paprikaCoins","wrap","_context","prev","next","axios","get","sent","data","slice","coin","coinPrice","find","coinPriceData","symbol","quotes","USD","id","rank","Number","toFixed","stop","apply","this","arguments","useEffect","length","_ref2","_callee2","found","freshCoinDataPrice","newPrice","newCoinData","_context2","element","concat","newCoin","_x","theme_provider","Header_Header","parseFloat","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3894f26c.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button } from \"@nextui-org/react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  color: white;\r\n  font-size: 2rem;\r\n  text-align: left;\r\n  padding: 1.5rem 0 1.5rem 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ButtonsDiv = styled.div`\r\n  display: flex;\r\n`;\r\nexport default function AccountBalance(props) {\r\n  const buttonText = props.showBalance ? \"Hide balance\" : \"Show balance\";\r\n  const balance = props.showBalance ? props.amount : \"*****\";\r\n  const toggleBalance = () => {\r\n    props.toggleBalance();\r\n  };\r\n  const airdropMoney = () => {\r\n    props.airdropMoney();\r\n  };\r\n  return (\r\n    <Section>\r\n      Balance: ${balance}\r\n      <ButtonsDiv>\r\n        <Button\r\n          shadow\r\n          onPress={toggleBalance}\r\n          css={{\r\n            background: \"#000000\",\r\n            marginTop: \"2rem\",\r\n          }}\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n        <Button\r\n          shadow\r\n          onPress={airdropMoney}\r\n          bordered\r\n          css={{\r\n            // background: \"#00FFA3\",\r\n            color: \"$white\",\r\n            marginLeft: \"2rem\",\r\n            marginTop: \"2rem\",\r\n            fontWeight: \"lighter\",\r\n          }}\r\n        >\r\n          💥 Airdrop 🚁\r\n        </Button>\r\n      </ButtonsDiv>\r\n    </Section>\r\n  );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n  amount: PropTypes.number.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Text, Modal, Input, Container } from \"@nextui-org/react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TD = styled.td`\r\n  width: 25vh;\r\n  padding: 1rem;\r\n`;\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n`;\r\nconst TR = styled.tr`\r\n  border: 1px solid red;\r\n`;\r\n\r\nexport default function Coins(props) {\r\n  const [tradeVisible, settradeVisible] = useState(false);\r\n  const [coinAmount, setcoinAmount] = useState(0);\r\n\r\n  const openTradeHandler = () => {\r\n    settradeVisible(true);\r\n  };\r\n  const closeTradeHandler = () => {\r\n    settradeVisible(false);\r\n  };\r\n  const handleClick = (event) => {\r\n    props.handleCoinRefresh(props.ticker);\r\n    console.log(coinAmount);\r\n  };\r\n  const handleCoinTrade = (direction) => {\r\n    props.handleCoinTrade(props.ticker, direction, coinAmount);\r\n  };\r\n  const handleCoinBuy = () => {\r\n    props.handleCoinBuy(props.ticker);\r\n  };\r\n  return (\r\n    <TR>\r\n      <TD>{props.name}</TD>\r\n      <TD>{props.ticker}</TD>\r\n      <TD>${props.price}</TD>\r\n      <TD>\r\n        <Button\r\n          onClick={openTradeHandler}\r\n          bordered\r\n          shadow\r\n          size=\"xl\"\r\n          css={{\r\n            border: \"1px solid #00FFA3\",\r\n            background: \"transparent\",\r\n            color: \"white\",\r\n            \"&:hover\": {\r\n              background: \"#03E1FF\",\r\n            },\r\n          }}\r\n        >\r\n          <Text color=\"white\">Buy / Sell</Text>\r\n        </Button>\r\n        <Modal\r\n          aria-labelledby=\"modal-title\"\r\n          open={tradeVisible}\r\n          onClose={closeTradeHandler}\r\n          // css={{\r\n          //   background: \"#03E1FF\",\r\n          // }}\r\n        >\r\n          <Modal.Header>\r\n            <Input\r\n              fullWidth\r\n              size=\"xl\"\r\n              aria-label=\"Close\"\r\n              bordered\r\n              labelRight={props.ticker}\r\n              placeholder=\"Amount\"\r\n              onChange={(e) => {\r\n                setcoinAmount(e.target.value);\r\n                console.log(coinAmount);\r\n              }}\r\n              css={{\r\n                background: \"$white\",\r\n              }}\r\n            />\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Button\r\n              size=\"xl\"\r\n              shadow\r\n              css={{ background: \"#00FFA3\" }}\r\n              onPress={(e) => {\r\n                handleCoinTrade(\"+\", coinAmount);\r\n                closeTradeHandler();\r\n              }}\r\n            >\r\n              <Text weight=\"light\" color=\"red\">\r\n                Buy\r\n              </Text>\r\n            </Button>\r\n            <Button\r\n              size=\"xl\"\r\n              shadow\r\n              css={{ background: \"#DC1FFF\" }}\r\n              onPress={(e) => {\r\n                handleCoinTrade(\"-\", coinAmount);\r\n                closeTradeHandler();\r\n              }}\r\n            >\r\n              <Text weight=\"light\" color=\"$white\">\r\n                Sell\r\n              </Text>\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </TD>\r\n      <TD>\r\n        <Container>\r\n          <Text size=\"2rem \" color=\"white\">\r\n            {props.balance}\r\n          </Text>\r\n          <Text color=\"white\" size=\"0.7rem\">\r\n            {props.ticker}\r\n          </Text>\r\n        </Container>\r\n      </TD>\r\n      <TD>\r\n        <Buttons>\r\n          <form action=\"#\" method=\"GET\">\r\n            <Button\r\n              onPress={handleClick}\r\n              size=\"xs\"\r\n              css={{\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                  background: \"#03E1FF\",\r\n                },\r\n              }}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </form>\r\n        </Buttons>\r\n      </TD>\r\n    </TR>\r\n  );\r\n}\r\n\r\nCoins.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Coin from \"../Coins/Coins\";\r\nexport default function CoinsList(props) {\r\n  return (\r\n    <table className=\"coin-prices\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          <th>Trade</th>\r\n          <th>Balance</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.coins.map(({ name, ticker, price, balance }) => {\r\n          const balanceToggled = props.showBalance ? balance : \"*****\";\r\n          return (\r\n            <Coin\r\n              key={ticker}\r\n              name={name}\r\n              ticker={ticker}\r\n              price={price}\r\n              balance={balanceToggled}\r\n              handleCoinRefresh={props.handleCoinRefresh}\r\n              handleCoinTrade={props.handleCoinTrade}\r\n            />\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <CoinExchangeHeader>\r\n        <SpinningLogoImg src={logoURL} alt=\"\" />\r\n        <AppTitle>Coin Exchange</AppTitle>\r\n      </CoinExchangeHeader>\r\n    );\r\n  }\r\n}\r\nconst CoinExchangeHeader = styled.header`\r\n  background-color: black;\r\n  min-height: 40vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n`;\r\nconst SpinningLogoImg = styled.img`\r\n  height: 8rem;\r\n  width: 8rem;\r\n  pointer-events: none;\r\n  margin: 1rem 3rem;\r\n  animation: App-logo-spin infinite 20s linear;\r\n`;\r\nconst AppTitle = styled.h1`\r\n  font-size: 4rem;\r\n`;\r\nconst logoURL =\r\n  \"https://imgs.search.brave.com/-rLo6GB3uMWXa_2Wwn_2V-zPN1WKzvbBDUs8JfIF6Iw/rs:fit:1200:1200:1/g:ce/aHR0cHM6Ly9jcnlw/dG9sb2dvcy5jYy9s/b2dvcy9zb2xhbmEt/c29sLWxvZ28ucG5n\";\r\n","import React, { useState } from \"react\";\r\nimport { Modal, NextUIProvider, Text } from \"@nextui-org/react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport AccountBalance from \"./components/AccountBalance/AccountBalance\";\r\nimport CoinsList from \"./components/CoinsList/CoinsList\";\r\nimport Header from \"./components/Header/Header\";\r\nimport AirdropButton from \"./AirdropButton/AirdropButton\";\r\nimport AccountButtons from \"./components/AccountButtons/AccountButtons\";\r\n\r\nfunction App() {\r\n  const [errorModalVisible, seterrorVisible] = React.useState(false);\r\n  const showerrorModalHandler = () => {\r\n    seterrorVisible(true);\r\n  };\r\n  const closeerrorModalHandler = () => seterrorVisible(false);\r\n\r\n  const [balance, setbalance] = useState(0);\r\n  const [showBalance, setshowBalance] = useState(true);\r\n  const [coinData, setcoinData] = useState([]);\r\n  const setCoinsData = async () => {\r\n    console.log(\"Main App Mounted\");\r\n    const coinsJson = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\r\n    const pricesJson = await axios.get(\r\n      \"https://api.coinpaprika.com/v1/tickers\"\r\n    );\r\n    const paprikaCoins = coinsJson.data.slice(0, 10).map((coin) => {\r\n      const coinPrice = pricesJson.data.find(\r\n        (coinPriceData) => coinPriceData.symbol === coin.symbol\r\n      ).quotes.USD.price;\r\n      return {\r\n        key: coin.id,\r\n        rank: coin.rank,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        price: Number(coinPrice.toFixed(4)),\r\n        balance: 0,\r\n      };\r\n    });\r\n    setcoinData(paprikaCoins);\r\n  };\r\n  React.useEffect(() => {\r\n    if (coinData.length === 0) {\r\n      setCoinsData();\r\n    }\r\n  });\r\n  const toggleBalance = () => {\r\n    setshowBalance(!showBalance);\r\n  };\r\n  const airdropMoney = () => {\r\n    console.log(\"airdrop request\");\r\n    setbalance(balance + 1000);\r\n    // let x = [...coinData];\r\n\r\n    // x = x.map((coins) => {\r\n    //   coins.balance += 1;\r\n    // });\r\n  };\r\n  const handleCoinRefresh = async (ticker) => {\r\n    const found = coinData.find((element) => element.ticker === ticker);\r\n    const freshCoinDataPrice = await axios.get(\r\n      `https://api.coinpaprika.com/v1/tickers/${found.key}`\r\n    );\r\n    const newPrice = freshCoinDataPrice.data.quotes.USD.price;\r\n    console.log(newPrice);\r\n    let newCoinData = coinData.map(function (coin) {\r\n      let newCoin = coin;\r\n      if (ticker === coin.ticker) {\r\n        newCoin.price = Number(newPrice.toFixed(4));\r\n      }\r\n      return newCoin;\r\n    });\r\n    setcoinData(newCoinData);\r\n  };\r\n  const handleCoinTrade = (ticker, direction, amount) => {\r\n    if (direction === \"+\") {\r\n      let newCoinData = coinData.map((coin) => {\r\n        let newCoin = coin;\r\n        if (coin.ticker === ticker) {\r\n          newCoin.balance = parseFloat(newCoin.balance + amount);\r\n          setbalance(balance + coin.price * amount);\r\n        }\r\n        console.log(newCoin);\r\n\r\n        return newCoin;\r\n      });\r\n      setcoinData(newCoinData);\r\n    }\r\n\r\n    if (direction === \"-\") {\r\n      let newCoinData = coinData.map((coin) => {\r\n        let newCoin = coin;\r\n        if (coin.ticker === ticker) {\r\n          if (coin.balance >= amount) {\r\n            console.log(amount);\r\n            newCoin.balance = parseFloat(newCoin.balance - amount);\r\n            setbalance(balance - coin.price * amount);\r\n          } else {\r\n            showerrorModalHandler();\r\n          }\r\n        }\r\n        console.log(newCoin);\r\n\r\n        return newCoin;\r\n      });\r\n      setcoinData(newCoinData);\r\n    }\r\n  };\r\n  return (\r\n    <NextUIProvider>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Modal\r\n          aria-labelledby=\"modal-title\"\r\n          open={errorModalVisible}\r\n          onClose={closeerrorModalHandler}\r\n        >\r\n          <Modal.Header>\r\n            <Text id=\"modal-title\" size={18}>\r\n              Not enough coins to sell\r\n            </Text>\r\n          </Modal.Header>\r\n        </Modal>\r\n        <AccountBalance\r\n          amount={balance}\r\n          toggleBalance={toggleBalance}\r\n          showBalance={showBalance}\r\n          airdropMoney={airdropMoney}\r\n        />\r\n        <CoinsList\r\n          coins={coinData}\r\n          handleCoinRefresh={handleCoinRefresh}\r\n          handleCoinTrade={handleCoinTrade}\r\n          showBalance={showBalance}\r\n        />\r\n      </div>\r\n    </NextUIProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}