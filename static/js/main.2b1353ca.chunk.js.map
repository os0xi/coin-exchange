{"version":3,"sources":["components/AccountBalance/AccountBalance.jsx","components/Twitter/Twitter.jsx","components/Coins/Coins.jsx","components/CoinsList/CoinsList.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Section","styled","section","_templateObject","Object","taggedTemplateLiteral","ButtonsDiv","div","_templateObject2","AccountBalance","props","buttonText","showBalance","balance","amount","react_default","a","createElement","esm_button","shadow","onPress","toggleBalance","css","background","marginTop","airdropMoney","bordered","color","marginLeft","fontWeight","Twitter","_React$useState","React","useState","_React$useState2","slicedToArray","visible","setVisible","_useState","_useState2","coinTweets","setcoinTweets","getTweets","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","tweets","wrap","_context","prev","next","axios","get","concat","id","sent","data","stop","apply","this","arguments","Fragment","onClick","modal","closeButton","aria-labelledby","open","width","onClose","console","log","Body","map","tweet","key","date","card","margin","container","display","direction","avatar","squared","src","user_image_link","user_name","esm_text","size","status","slice","TD","td","Coins_templateObject","Buttons","Coins_templateObject2","TR","tr","_templateObject3","Coins","tradeVisible","settradeVisible","_useState3","_useState4","coinAmount","setcoinAmount","closeTradeHandler","handleCoinTrade","ticker","name","price","border","&:hover","Header","input","fullWidth","aria-label","labelRight","placeholder","onChange","e","target","value","weight","action","method","event","handleCoinRefresh","CoinsList","className","coins","balanceToggled","CoinExchangeHeader","SpinningLogoImg","logoURL","alt","AppTitle","Component","header","Header_templateObject","img","Header_templateObject2","h1","Header_templateObject3","App","errorModalVisible","seterrorVisible","setbalance","setshowBalance","_useState5","_useState6","coinData","setcoinData","setCoinsData","App_regeneratorRuntime","coinsJson","pricesJson","paprikaCoins","coin","coinPrice","find","coinPriceData","symbol","quotes","USD","rank","Number","toFixed","useEffect","length","_ref2","_callee2","found","freshCoinDataPrice","newPrice","newCoinData","_context2","element","newCoin","_x","theme_provider","Header_Header","parseFloat","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"qQAKMA,EAAUC,IAAOC,QAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,mJAQPE,EAAaL,IAAOM,IAAVC,MAAAJ,OAAAC,EAAA,EAAAD,CAAA,4BAGD,SAASK,EAAeC,GACrC,IAAMC,EAAaD,EAAME,YAAc,eAAiB,eAClDC,EAAUH,EAAME,YAAcF,EAAMI,OAAS,QAOnD,OACEC,EAAAC,EAAAC,cAACjB,EAAD,kBACaa,EACXE,EAAAC,EAAAC,cAACX,EAAD,KACES,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,QAZc,WACpBV,EAAMW,iBAYAC,IAAK,CACHC,WAAY,UACZC,UAAW,SAGZb,GAEHI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,QAAM,EACNC,QAnBa,WACnBV,EAAMe,gBAmBAC,UAAQ,EACRJ,IAAK,CAEHK,MAAO,SACPC,WAAY,OACZJ,UAAW,OACXK,WAAY,YAThB,s2MC1BO,SAASC,EAAQpB,GAAO,IAAAqB,EACPC,IAAMC,UAAS,GADRC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GAC9BK,EAD8BF,EAAA,GACrBG,EADqBH,EAAA,GAAAI,EAEDL,mBAAS,IAFRM,EAAAnC,OAAA+B,EAAA,EAAA/B,CAAAkC,EAAA,GAE9BE,EAF8BD,EAAA,GAElBE,EAFkBF,EAAA,GAY/BG,EAAS,eAAAC,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAyC,IAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,IAAMC,IAAN,wCAAAC,OACuB7C,EAAM8C,GAD7B,aADH,OACZR,EADYE,EAAAO,KAIhBhB,EAAcO,EAAOU,MAJL,wBAAAR,EAAAS,SAAAZ,MAAH,yBAAAJ,EAAAiB,MAAAC,KAAAC,YAAA,GAMf,OACE/C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+C,SAAA,KACEhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ8C,QAjBI,WACdtB,EAAUhC,EAAM8C,IAChBnB,GAAW,KAeT,WACAtB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEtC,MAAM,YACNuC,aAAW,EACXC,kBAAgB,cAChBC,KAAMhC,EACNiC,MAAM,QACNC,QAnBe,WACnBjC,GAAW,GACXkC,QAAQC,IAAI,YAmBRzD,EAAAC,EAAAC,cAACgD,EAAA,EAAMQ,KAAP,KACGjC,EAAWkC,IAAI,SAACC,GACf,OACE5D,EAAAC,EAAAC,cAAA,OAAK2D,IAAKD,EAAME,MACd9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACExD,IAAK,CACHyD,OAAQ,SAGVhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAWC,QAAQ,OAAOC,UAAU,OAClCnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAQC,SAAO,EAACC,IAAKV,EAAMW,kBAC1BX,EAAMY,WAGTxE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACEjE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMC,KAAK,UAAUd,EAAMe,SAE7B3E,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KAAYL,EAAME,KAAKc,MAAM,EAAG,YCrDlD,IAAMC,EAAK3F,IAAO4F,GAAVC,MAAA1F,OAAAC,EAAA,EAAAD,CAAA,4CAIF2F,EAAU9F,IAAOM,IAAVyF,MAAA5F,OAAAC,EAAA,EAAAD,CAAA,0CAIP6F,EAAKhG,IAAOiG,GAAVC,MAAA/F,OAAAC,EAAA,EAAAD,CAAA,oCAIO,SAASgG,EAAM1F,GAAO,IAAA4B,EACKL,oBAAS,GADdM,EAAAnC,OAAA+B,EAAA,EAAA/B,CAAAkC,EAAA,GAC5B+D,EAD4B9D,EAAA,GACd+D,EADc/D,EAAA,GAAAgE,EAECtE,mBAAS,GAFVuE,EAAApG,OAAA+B,EAAA,EAAA/B,CAAAmG,EAAA,GAE5BE,EAF4BD,EAAA,GAEhBE,EAFgBF,EAAA,GAO7BG,EAAoB,WACxBL,GAAgB,IAMZM,EAAkB,SAAC1B,GACvBxE,EAAMkG,gBAAgBlG,EAAMmG,OAAQ3B,EAAWuB,IAKjD,OACE1F,EAAAC,EAAAC,cAACgF,EAAD,KACElF,EAAAC,EAAAC,cAAC2E,EAAD,KACGlF,EAAMoG,KACP/F,EAAAC,EAAAC,cAACa,EAAD,CAAS0B,GAAI9C,EAAM8C,MAErBzC,EAAAC,EAAAC,cAAC2E,EAAD,KAAKlF,EAAMmG,QACX9F,EAAAC,EAAAC,cAAC2E,EAAD,SAAMlF,EAAMqG,OACZhG,EAAAC,EAAAC,cAAC2E,EAAD,KACE7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8C,QA1BiB,WACvBsC,GAAgB,IA0BV5E,UAAQ,EACRP,QAAM,EACNsE,KAAK,KACLnE,IAAK,CACH0F,OAAQ,oBACRzF,WAAY,cACZI,MAAO,QACPsF,UAAW,CACT1F,WAAY,aAIhBR,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAM7D,MAAM,SAAZ,eAEFZ,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEE,kBAAgB,cAChBC,KAAMiC,EACN/B,QAASqC,GAKT5F,EAAAC,EAAAC,cAACgD,EAAA,EAAMiD,OAAP,KACEnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACEC,WAAS,EACT3B,KAAK,KACL4B,aAAW,QACX3F,UAAQ,EACR4F,WAAY5G,EAAMmG,OAClBU,YAAY,SACZC,SAAU,SAACC,GACTf,EAAce,EAAEC,OAAOC,OACvBpD,QAAQC,IAAIiC,IAEdnF,IAAK,CACHC,WAAY,aAIlBR,EAAAC,EAAAC,cAACgD,EAAA,EAAMQ,KAAP,KACE1D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuE,KAAK,KACLtE,QAAM,EACNG,IAAK,CAAEC,WAAY,WACnBH,QAAS,SAACqG,GACRb,EAAgB,KAChBD,MAGF5F,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMoC,OAAO,QAAQjG,MAAM,OAA3B,QAIFZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEuE,KAAK,KACLtE,QAAM,EACNG,IAAK,CAAEC,WAAY,WACnBH,QAAS,SAACqG,GACRb,EAAgB,KAChBD,MAGF5F,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMoC,OAAO,QAAQjG,MAAM,UAA3B,YAORZ,EAAAC,EAAAC,cAAC2E,EAAD,KACE7E,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACEjE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMC,KAAK,QAAQ9D,MAAM,SACtBjB,EAAMG,SAETE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAM7D,MAAM,QAAQ8D,KAAK,UACtB/E,EAAMmG,UAIb9F,EAAAC,EAAAC,cAAC2E,EAAD,KACE7E,EAAAC,EAAAC,cAAC8E,EAAD,KACEhF,EAAAC,EAAAC,cAAA,QAAM4G,OAAO,IAAIC,OAAO,OACtB/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,QAxGQ,SAAC2G,GACnBrH,EAAMsH,kBAAkBtH,EAAMmG,QAC9BtC,QAAQC,IAAIiC,IAuGFhB,KAAK,KACLnE,IAAK,CACHK,MAAO,QACPsF,UAAW,CACT1F,WAAY,aANlB,eCjIG,SAAS0G,EAAUvH,GAChC,OACEK,EAAAC,EAAAC,cAAA,SAAOiH,UAAU,eACfnH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,aACGP,EAAMyH,MAAMzD,IAAI,SAAA/B,GAA2C,IAAxCiC,EAAwCjC,EAAxCiC,IAAKkC,EAAmCnE,EAAnCmE,KAAMD,EAA6BlE,EAA7BkE,OAAQE,EAAqBpE,EAArBoE,MAAOlG,EAAc8B,EAAd9B,QACtCuH,EAAiB1H,EAAME,YAAcC,EAAU,QAErD,OADA0D,QAAQC,IAAII,GAEV7D,EAAAC,EAAAC,cAACmF,EAAD,CACE5C,GAAIoB,EACJA,IAAKiC,EACLC,KAAMA,EACND,OAAQA,EACRE,MAAOA,EACPlG,QAASuH,EACTJ,kBAAmBtH,EAAMsH,kBACzBpB,gBAAiBlG,EAAMkG,wECzBhBM,mLAEjB,OACEnG,EAAAC,EAAAC,cAACoH,EAAD,KACEtH,EAAAC,EAAAC,cAACqH,EAAD,CAAiBjD,IAAKkD,EAASC,IAAI,KACnCzH,EAAAC,EAAAC,cAACwH,EAAD,8BAL4BC,aAU9BL,EAAqBpI,IAAO0I,OAAVC,MAAAxI,OAAAC,EAAA,EAAAD,CAAA,wLASlBkI,EAAkBrI,IAAO4I,IAAVC,MAAA1I,OAAAC,EAAA,EAAAD,CAAA,2IAOfqI,EAAWxI,IAAO8I,GAAVC,MAAA5I,OAAAC,EAAA,EAAAD,CAAA,8BAGRmI,EACJ,y7MC4GaU,MAnIf,WAAe,IAAAlH,EACgCC,IAAMC,UAAS,GAD/CC,EAAA9B,OAAA+B,EAAA,EAAA/B,CAAA2B,EAAA,GACNmH,EADMhH,EAAA,GACaiH,EADbjH,EAAA,GAAAI,EAOiBL,mBAAS,GAP1BM,EAAAnC,OAAA+B,EAAA,EAAA/B,CAAAkC,EAAA,GAONzB,EAPM0B,EAAA,GAOG6G,EAPH7G,EAAA,GAAAgE,EAQyBtE,oBAAS,GARlCuE,EAAApG,OAAA+B,EAAA,EAAA/B,CAAAmG,EAAA,GAQN3F,EARM4F,EAAA,GAQO6C,EARP7C,EAAA,GAAA8C,EASmBrH,mBAAS,IAT5BsH,EAAAnJ,OAAA+B,EAAA,EAAA/B,CAAAkJ,EAAA,GASNE,EATMD,EAAA,GASIE,EATJF,EAAA,GAUPG,EAAY,eAAA/G,EAAAvC,OAAAwC,EAAA,EAAAxC,CAAAuJ,IAAA7G,KAAG,SAAAC,IAAA,IAAA6G,EAAAC,EAAAC,EAAA,OAAAH,IAAA1G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBmB,QAAQC,IAAI,oBADOtB,EAAAE,KAAA,EAEKC,IAAMC,IAAI,wCAFf,cAEbsG,EAFa1G,EAAAO,KAAAP,EAAAE,KAAA,EAGMC,IAAMC,IAC7B,0CAJiB,OAGbuG,EAHa3G,EAAAO,KAMbqG,EAAeF,EAAUlG,KAAKiC,MAAM,EAAG,IAAIjB,IAAI,SAACqF,GACpD,IAAMC,EAAYH,EAAWnG,KAAKuG,KAChC,SAACC,GAAD,OAAmBA,EAAcC,SAAWJ,EAAKI,SACjDC,OAAOC,IAAItD,MACb,MAAO,CACLnC,IAAKmF,EAAKvG,GACV8G,KAAMP,EAAKO,KACXxD,KAAMiD,EAAKjD,KACXD,OAAQkD,EAAKI,OACbpD,MAAOwD,OAAOP,EAAUQ,QAAQ,IAChC3J,QAAS,KAGb4I,EAAYK,GAnBO,wBAAA5G,EAAAS,SAAAZ,MAAH,yBAAAJ,EAAAiB,MAAAC,KAAAC,YAAA,GAqBlB9B,IAAMyI,UAAU,WACU,IAApBjB,EAASkB,QACXhB,MAGJ,IAaM1B,EAAiB,eAAA2C,EAAAvK,OAAAwC,EAAA,EAAAxC,CAAAuJ,IAAA7G,KAAG,SAAA8H,EAAO/D,GAAP,IAAAgE,EAAAC,EAAAC,EAAAC,EAAA,OAAArB,IAAA1G,KAAA,SAAAgI,GAAA,cAAAA,EAAA9H,KAAA8H,EAAA7H,MAAA,cAClByH,EAAQrB,EAASS,KAAK,SAACiB,GAAD,OAAaA,EAAQrE,SAAWA,IADpCoE,EAAA7H,KAAA,EAESC,IAAMC,IAAN,0CAAAC,OACWsH,EAAMjG,MAH1B,OAElBkG,EAFkBG,EAAAxH,KAKlBsH,EAAWD,EAAmBpH,KAAK0G,OAAOC,IAAItD,MACpDxC,QAAQC,IAAIuG,GACRC,EAAcxB,EAAS9E,IAAI,SAAUqF,GACvC,IAAIoB,EAAUpB,EAId,OAHIlD,IAAWkD,EAAKlD,SAClBsE,EAAQpE,MAAQwD,OAAOQ,EAASP,QAAQ,KAEnCW,IAET1B,EAAYuB,GAdY,wBAAAC,EAAAtH,SAAAiH,MAAH,gBAAAQ,GAAA,OAAAT,EAAA/G,MAAAC,KAAAC,YAAA,GAkDvB,OACE/C,EAAAC,EAAAC,cAACoK,EAAA,EAAD,KACEtK,EAAAC,EAAAC,cAAA,OAAKiH,UAAU,OACbnH,EAAAC,EAAAC,cAACqK,EAAD,MACAvK,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACEE,kBAAgB,cAChBC,KAAM8E,EACN5E,QArGuB,kBAAM6E,GAAgB,KAuG7CpI,EAAAC,EAAAC,cAACgD,EAAA,EAAMiD,OAAP,KACEnG,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMhC,GAAG,cAAciC,KAAM,IAA7B,8BAKJ1E,EAAAC,EAAAC,cAACR,EAAD,CACEK,OAAQD,EACRQ,cAhFc,WACpBgI,GAAgBzI,GAChB2D,QAAQC,IAAIgF,IA+EN5I,YAAaA,EACba,aA9Ea,WACnB8C,QAAQC,IAAI,mBACZ4E,EAAWvI,EAAU,QA8EjBE,EAAAC,EAAAC,cAACgH,EAAD,CACEE,MAAOqB,EACPxB,kBAAmBA,EACnBpB,gBA1DgB,SAACC,EAAQ3B,EAAWpE,GAC1C,GAAkB,MAAdoE,EAAmB,CACrB,IAAI8F,EAAcxB,EAAS9E,IAAI,SAACqF,GAC9B,IAAIoB,EAAUpB,EAOd,OANIA,EAAKlD,SAAWA,IAClBsE,EAAQtK,QAAU0K,WAAWJ,EAAQtK,QAAUC,GAC/CsI,EAAWvI,EAAUkJ,EAAKhD,MAAQjG,IAEpCyD,QAAQC,IAAI2G,GAELA,IAET1B,EAAYuB,GAGd,GAAkB,MAAd9F,EAAmB,CACrB,IAAI8F,EAAcxB,EAAS9E,IAAI,SAACqF,GAC9B,IAAIoB,EAAUpB,EAYd,OAXIA,EAAKlD,SAAWA,IACdkD,EAAKlJ,SAAWC,GAClByD,QAAQC,IAAI1D,GACZqK,EAAQtK,QAAU0K,WAAWJ,EAAQtK,QAAUC,GAC/CsI,EAAWvI,EAAUkJ,EAAKhD,MAAQjG,IApF1CqI,GAAgB,IAyFZ5E,QAAQC,IAAI2G,GAELA,IAET1B,EAAYuB,KA4BRpK,YAAaA,OC1HR4K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAlE,EAAA,GAAAmE,KAAAD,EAAAE,KAAA,WAAqBD,KAAK,SAAAjJ,GAAiD,IAA9CmJ,EAA8CnJ,EAA9CmJ,OAAQC,EAAsCpJ,EAAtCoJ,OAAQC,EAA8BrJ,EAA9BqJ,OAAQC,EAAsBtJ,EAAtBsJ,OAAQC,EAAcvJ,EAAduJ,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxL,EAAAC,EAAAC,cAACF,EAAAC,EAAMwL,WAAP,KACEzL,EAAAC,EAAAC,cAACwL,EAAD,QAOJjB","file":"static/js/main.2b1353ca.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button } from \"@nextui-org/react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  color: white;\r\n  font-size: 2rem;\r\n  text-align: left;\r\n  padding: 1.5rem 0 1.5rem 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ButtonsDiv = styled.div`\r\n  display: flex;\r\n`;\r\nexport default function AccountBalance(props) {\r\n  const buttonText = props.showBalance ? \"Hide balance\" : \"Show balance\";\r\n  const balance = props.showBalance ? props.amount : \"*****\";\r\n  const toggleBalance = () => {\r\n    props.toggleBalance();\r\n  };\r\n  const airdropMoney = () => {\r\n    props.airdropMoney();\r\n  };\r\n  return (\r\n    <Section>\r\n      Balance: ${balance}\r\n      <ButtonsDiv>\r\n        <Button\r\n          shadow\r\n          onPress={toggleBalance}\r\n          css={{\r\n            background: \"#000000\",\r\n            marginTop: \"2rem\",\r\n          }}\r\n        >\r\n          {buttonText}\r\n        </Button>\r\n        <Button\r\n          shadow\r\n          onPress={airdropMoney}\r\n          bordered\r\n          css={{\r\n            // background: \"#00FFA3\",\r\n            color: \"$white\",\r\n            marginLeft: \"2rem\",\r\n            marginTop: \"2rem\",\r\n            fontWeight: \"lighter\",\r\n          }}\r\n        >\r\n          💥 Airdrop 🚁\r\n        </Button>\r\n      </ButtonsDiv>\r\n    </Section>\r\n  );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n  amount: PropTypes.number.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Container,\r\n  Button,\r\n  Card,\r\n  Modal,\r\n  styled,\r\n  Avatar,\r\n  Text,\r\n} from \"@nextui-org/react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Twitter(props) {\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [coinTweets, setcoinTweets] = useState([]);\r\n  const handler = () => {\r\n    getTweets(props.id);\r\n    setVisible(true);\r\n  };\r\n\r\n  const closeHandler = () => {\r\n    setVisible(false);\r\n    console.log(\"closed\");\r\n  };\r\n  const getTweets = async () => {\r\n    let tweets = await axios.get(\r\n      `https://api.coinpaprika.com/v1/coins/${props.id}/twitter`\r\n    );\r\n    setcoinTweets(tweets.data);\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={handler}>Twitter</Button>\r\n      <Modal\r\n        color=\"secondary\"\r\n        closeButton\r\n        aria-labelledby=\"modal-title\"\r\n        open={visible}\r\n        width=\"100vw\"\r\n        onClose={closeHandler}\r\n      >\r\n        <Modal.Body>\r\n          {coinTweets.map((tweet) => {\r\n            return (\r\n              <div key={tweet.date}>\r\n                <Card\r\n                  css={{\r\n                    margin: \"1rem\",\r\n                  }}\r\n                >\r\n                  <Container display=\"flex\" direction=\"row\">\r\n                    <Avatar squared src={tweet.user_image_link} />\r\n                    {tweet.user_name}\r\n                  </Container>\r\n\r\n                  <Container>\r\n                    <Text size=\"1.5rem\">{tweet.status}</Text>\r\n                  </Container>\r\n                  <Container>{tweet.date.slice(0, 10)}</Container>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Text, Modal, Input, Container } from \"@nextui-org/react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport Twitter from \"../Twitter/Twitter\";\r\n\r\nconst TD = styled.td`\r\n  width: 25vh;\r\n  padding: 1rem;\r\n`;\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n`;\r\nconst TR = styled.tr`\r\n  border: 1px solid red;\r\n`;\r\n\r\nexport default function Coins(props) {\r\n  const [tradeVisible, settradeVisible] = useState(false);\r\n  const [coinAmount, setcoinAmount] = useState(0);\r\n\r\n  const openTradeHandler = () => {\r\n    settradeVisible(true);\r\n  };\r\n  const closeTradeHandler = () => {\r\n    settradeVisible(false);\r\n  };\r\n  const handleClick = (event) => {\r\n    props.handleCoinRefresh(props.ticker);\r\n    console.log(coinAmount);\r\n  };\r\n  const handleCoinTrade = (direction) => {\r\n    props.handleCoinTrade(props.ticker, direction, coinAmount);\r\n  };\r\n  const handleCoinBuy = () => {\r\n    props.handleCoinBuy(props.ticker);\r\n  };\r\n  return (\r\n    <TR>\r\n      <TD>\r\n        {props.name}\r\n        <Twitter id={props.id} />\r\n      </TD>\r\n      <TD>{props.ticker}</TD>\r\n      <TD>${props.price}</TD>\r\n      <TD>\r\n        <Button\r\n          onClick={openTradeHandler}\r\n          bordered\r\n          shadow\r\n          size=\"xl\"\r\n          css={{\r\n            border: \"1px solid #00FFA3\",\r\n            background: \"transparent\",\r\n            color: \"white\",\r\n            \"&:hover\": {\r\n              background: \"#03E1FF\",\r\n            },\r\n          }}\r\n        >\r\n          <Text color=\"white\">Buy / Sell</Text>\r\n        </Button>\r\n        <Modal\r\n          aria-labelledby=\"modal-title\"\r\n          open={tradeVisible}\r\n          onClose={closeTradeHandler}\r\n          // css={{\r\n          //   background: \"#03E1FF\",\r\n          // }}\r\n        >\r\n          <Modal.Header>\r\n            <Input\r\n              fullWidth\r\n              size=\"xl\"\r\n              aria-label=\"Close\"\r\n              bordered\r\n              labelRight={props.ticker}\r\n              placeholder=\"Amount\"\r\n              onChange={(e) => {\r\n                setcoinAmount(e.target.value);\r\n                console.log(coinAmount);\r\n              }}\r\n              css={{\r\n                background: \"$white\",\r\n              }}\r\n            />\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Button\r\n              size=\"xl\"\r\n              shadow\r\n              css={{ background: \"#00FFA3\" }}\r\n              onPress={(e) => {\r\n                handleCoinTrade(\"+\", coinAmount);\r\n                closeTradeHandler();\r\n              }}\r\n            >\r\n              <Text weight=\"light\" color=\"red\">\r\n                Buy\r\n              </Text>\r\n            </Button>\r\n            <Button\r\n              size=\"xl\"\r\n              shadow\r\n              css={{ background: \"#DC1FFF\" }}\r\n              onPress={(e) => {\r\n                handleCoinTrade(\"-\", coinAmount);\r\n                closeTradeHandler();\r\n              }}\r\n            >\r\n              <Text weight=\"light\" color=\"$white\">\r\n                Sell\r\n              </Text>\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </TD>\r\n      <TD>\r\n        <Container>\r\n          <Text size=\"2rem \" color=\"white\">\r\n            {props.balance}\r\n          </Text>\r\n          <Text color=\"white\" size=\"0.7rem\">\r\n            {props.ticker}\r\n          </Text>\r\n        </Container>\r\n      </TD>\r\n      <TD>\r\n        <Buttons>\r\n          <form action=\"#\" method=\"GET\">\r\n            <Button\r\n              onPress={handleClick}\r\n              size=\"xs\"\r\n              css={{\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                  background: \"#03E1FF\",\r\n                },\r\n              }}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </form>\r\n        </Buttons>\r\n      </TD>\r\n    </TR>\r\n  );\r\n}\r\n\r\nCoins.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Coin from \"../Coins/Coins\";\r\nexport default function CoinsList(props) {\r\n  return (\r\n    <table className=\"coin-prices\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          <th>Trade</th>\r\n          <th>Balance</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.coins.map(({ key, name, ticker, price, balance }) => {\r\n          const balanceToggled = props.showBalance ? balance : \"*****\";\r\n          console.log(key);\r\n          return (\r\n            <Coin\r\n              id={key}\r\n              key={ticker}\r\n              name={name}\r\n              ticker={ticker}\r\n              price={price}\r\n              balance={balanceToggled}\r\n              handleCoinRefresh={props.handleCoinRefresh}\r\n              handleCoinTrade={props.handleCoinTrade}\r\n            />\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <CoinExchangeHeader>\r\n        <SpinningLogoImg src={logoURL} alt=\"\" />\r\n        <AppTitle>Coin Exchange</AppTitle>\r\n      </CoinExchangeHeader>\r\n    );\r\n  }\r\n}\r\nconst CoinExchangeHeader = styled.header`\r\n  background-color: black;\r\n  min-height: 40vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n`;\r\nconst SpinningLogoImg = styled.img`\r\n  height: 8rem;\r\n  width: 8rem;\r\n  pointer-events: none;\r\n  margin: 1rem 3rem;\r\n  animation: App-logo-spin infinite 20s linear;\r\n`;\r\nconst AppTitle = styled.h1`\r\n  font-size: 4rem;\r\n`;\r\nconst logoURL =\r\n  \"https://imgs.search.brave.com/-rLo6GB3uMWXa_2Wwn_2V-zPN1WKzvbBDUs8JfIF6Iw/rs:fit:1200:1200:1/g:ce/aHR0cHM6Ly9jcnlw/dG9sb2dvcy5jYy9s/b2dvcy9zb2xhbmEt/c29sLWxvZ28ucG5n\";\r\n","import React, { useState } from \"react\";\r\nimport { Modal, NextUIProvider, Text } from \"@nextui-org/react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport AccountBalance from \"./components/AccountBalance/AccountBalance\";\r\nimport CoinsList from \"./components/CoinsList/CoinsList\";\r\nimport Header from \"./components/Header/Header\";\r\nimport AirdropButton from \"./AirdropButton/AirdropButton\";\r\nimport AccountButtons from \"./components/AccountButtons/AccountButtons\";\r\n\r\nfunction App() {\r\n  const [errorModalVisible, seterrorVisible] = React.useState(false);\r\n  const showerrorModalHandler = () => {\r\n    seterrorVisible(true);\r\n  };\r\n  const closeerrorModalHandler = () => seterrorVisible(false);\r\n\r\n  const [balance, setbalance] = useState(0);\r\n  const [showBalance, setshowBalance] = useState(true);\r\n  const [coinData, setcoinData] = useState([]);\r\n  const setCoinsData = async () => {\r\n    console.log(\"Main App Mounted\");\r\n    const coinsJson = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\r\n    const pricesJson = await axios.get(\r\n      \"https://api.coinpaprika.com/v1/tickers\"\r\n    );\r\n    const paprikaCoins = coinsJson.data.slice(0, 10).map((coin) => {\r\n      const coinPrice = pricesJson.data.find(\r\n        (coinPriceData) => coinPriceData.symbol === coin.symbol\r\n      ).quotes.USD.price;\r\n      return {\r\n        key: coin.id,\r\n        rank: coin.rank,\r\n        name: coin.name,\r\n        ticker: coin.symbol,\r\n        price: Number(coinPrice.toFixed(4)),\r\n        balance: 0,\r\n      };\r\n    });\r\n    setcoinData(paprikaCoins);\r\n  };\r\n  React.useEffect(() => {\r\n    if (coinData.length === 0) {\r\n      setCoinsData();\r\n    }\r\n  });\r\n  const toggleBalance = () => {\r\n    setshowBalance(!showBalance);\r\n    console.log(coinData);\r\n  };\r\n  const airdropMoney = () => {\r\n    console.log(\"airdrop request\");\r\n    setbalance(balance + 1000);\r\n    // let x = [...coinData];\r\n\r\n    // x = x.map((coins) => {\r\n    //   coins.balance += 1;\r\n    // });\r\n  };\r\n  const handleCoinRefresh = async (ticker) => {\r\n    const found = coinData.find((element) => element.ticker === ticker);\r\n    const freshCoinDataPrice = await axios.get(\r\n      `https://api.coinpaprika.com/v1/tickers/${found.key}`\r\n    );\r\n    const newPrice = freshCoinDataPrice.data.quotes.USD.price;\r\n    console.log(newPrice);\r\n    let newCoinData = coinData.map(function (coin) {\r\n      let newCoin = coin;\r\n      if (ticker === coin.ticker) {\r\n        newCoin.price = Number(newPrice.toFixed(4));\r\n      }\r\n      return newCoin;\r\n    });\r\n    setcoinData(newCoinData);\r\n  };\r\n  const handleCoinTrade = (ticker, direction, amount) => {\r\n    if (direction === \"+\") {\r\n      let newCoinData = coinData.map((coin) => {\r\n        let newCoin = coin;\r\n        if (coin.ticker === ticker) {\r\n          newCoin.balance = parseFloat(newCoin.balance + amount);\r\n          setbalance(balance + coin.price * amount);\r\n        }\r\n        console.log(newCoin);\r\n\r\n        return newCoin;\r\n      });\r\n      setcoinData(newCoinData);\r\n    }\r\n\r\n    if (direction === \"-\") {\r\n      let newCoinData = coinData.map((coin) => {\r\n        let newCoin = coin;\r\n        if (coin.ticker === ticker) {\r\n          if (coin.balance >= amount) {\r\n            console.log(amount);\r\n            newCoin.balance = parseFloat(newCoin.balance - amount);\r\n            setbalance(balance - coin.price * amount);\r\n          } else {\r\n            showerrorModalHandler();\r\n          }\r\n        }\r\n        console.log(newCoin);\r\n\r\n        return newCoin;\r\n      });\r\n      setcoinData(newCoinData);\r\n    }\r\n  };\r\n  return (\r\n    <NextUIProvider>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Modal\r\n          aria-labelledby=\"modal-title\"\r\n          open={errorModalVisible}\r\n          onClose={closeerrorModalHandler}\r\n        >\r\n          <Modal.Header>\r\n            <Text id=\"modal-title\" size={18}>\r\n              Not enough coins to sell\r\n            </Text>\r\n          </Modal.Header>\r\n        </Modal>\r\n        <AccountBalance\r\n          amount={balance}\r\n          toggleBalance={toggleBalance}\r\n          showBalance={showBalance}\r\n          airdropMoney={airdropMoney}\r\n        />\r\n        <CoinsList\r\n          coins={coinData}\r\n          handleCoinRefresh={handleCoinRefresh}\r\n          handleCoinTrade={handleCoinTrade}\r\n          showBalance={showBalance}\r\n        />\r\n      </div>\r\n    </NextUIProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}